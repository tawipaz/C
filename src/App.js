// App.js (‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß)

import React, { useEffect, useState } from "react";
import AuthRegisterPage from "./pages/AuthRegisterPage";
import DashboardPage from "./pages/DashboardPage";
import PersonnelPage from "./pages/PersonnelPage";
import ShiftWorkPage from "./pages/ShiftWorkPage";
import AppLayout from "./layouts/AppLayout";
import ChatPage from "./pages/ChatPage";
import AdminPage from "./pages/AdminPage";

const ProfilePage = ({ user }) => (
  <div className="bg-white rounded-2xl p-6 shadow-sm border border-slate-200">
    <h2 className="text-2xl font-bold text-slate-900 mb-4">‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå</h2>
    <p className="text-slate-600">‡∏´‡∏ô‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß</p>
    <div className="mt-4 p-4 bg-blue-50 border border-blue-200 rounded-lg">
      <h3 className="font-semibold text-blue-900 mb-2">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:</h3>
      <div className="text-sm text-blue-800 space-y-1">
        <p><strong>‡∏Ñ‡∏≥‡∏ô‡∏≥‡∏´‡∏ô‡πâ‡∏≤:</strong> {user?.prefix || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}</p>
        <p><strong>‡∏ä‡∏∑‡πà‡∏≠:</strong> {user?.firstname || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}</p>
        <p><strong>‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•:</strong> {user?.lastname || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}</p>
        <p><strong>‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á:</strong> {user?.position || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}</p>
        <p><strong>‡∏™‡∏±‡∏á‡∏Å‡∏±‡∏î:</strong> {user?.affiliation || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}</p>
        <p><strong>‡πÅ‡∏ú‡∏ô‡∏Å:</strong> {user?.deph || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}</p>
        <p><strong>‡∏£‡∏∏‡πà‡∏ô:</strong> {user?.generation || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}</p>
        <p><strong>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£:</strong> {user?.phone || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}</p>
        <p><strong>‡∏≠‡∏µ‡πÄ‡∏°‡∏•:</strong> {user?.email || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}</p>
        <p><strong>LINE ID:</strong> {user?.lineUserId || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}</p>
      </div>
    </div>
  </div>
);

const SettingsPage = () => (
  <div className="bg-white rounded-2xl p-6 shadow-sm border border-slate-200">
    <h2 className="text-2xl font-bold text-slate-900 mb-4">‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤</h2>
    <p className="text-slate-600">‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö</p>
    <div className="mt-4 p-4 bg-yellow-50 border border-yellow-200 rounded-lg">
      <p className="text-yellow-800">üöß ‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤</p>
    </div>
  </div>
);

function App() {
  const [user, setUser] = useState(null);
  const [currentPath, setCurrentPath] = useState("/");

  useEffect(() => {
    const saved = localStorage.getItem("authUser");
    if (saved) {
      try {
        setUser(JSON.parse(saved));
      } catch (error) {
        console.error("Error parsing saved user:", error);
        localStorage.removeItem("authUser");
      }
    }

    const path = window.location.pathname;
    setCurrentPath(path);

    const handlePopState = () => {
      setCurrentPath(window.location.pathname);
    };
    window.addEventListener('popstate', handlePopState);
    
    return () => {
      window.removeEventListener('popstate', handlePopState);
    };
  }, []);

  const handleLoginSuccess = (u) => {
    setUser(u);
    localStorage.setItem("authUser", JSON.stringify(u));
  };

  const handleLogout = () => {
    setUser(null);
    localStorage.removeItem("authUser");
    setCurrentPath("/");
    window.history.pushState({}, "", "/");
  };

  const handleNavigate = (path) => {
    setCurrentPath(path);
    window.history.pushState({}, "", path);
  };

  const handleOpenNotifications = () => {
    console.log("Open notifications");
    alert("‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô - ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤");
  };

  if (!user) {
    return <AuthRegisterPage onLoginSuccess={handleLoginSuccess} />;
  }

  const getCurrentPageContent = () => {
    // --- ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç ---
    // 1. ‡∏™‡∏£‡πâ‡∏≤‡∏á list ‡∏Ç‡∏≠‡∏á role ‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÑ‡∏î‡πâ
    const allowedAdminRoles = ['super_admin', 'admin', 'supervisor', 'scheduler'];

    // 2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ role ‡∏Ç‡∏≠‡∏á user ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô list ‡∏ô‡∏µ‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (user && allowedAdminRoles.includes(user.role) && currentPath === "/admin") {
      return <AdminPage user={user} />;
    }
    // --- ‡∏à‡∏ö‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç ---

    switch (currentPath) {
      case "/":
        return <DashboardPage user={user} />;
      case "/personnel":
        return <PersonnelPage user={user} />;
      case "/shifts":
      case "/tasks":
        return <ShiftWorkPage user={user} />;
      case "/chat":
        return <ChatPage />;
      case "/profile":
        return <ProfilePage user={user} />;
      case "/settings":
        return <SettingsPage />;
      default:
        return <DashboardPage user={user} />;
    }
  };

  return (
    <AppLayout
      user={user}
      currentPath={currentPath}
      onNavigate={handleNavigate}
      onLogout={handleLogout}
      onOpenNotifications={handleOpenNotifications}
    >
      {getCurrentPageContent()}
    </AppLayout>
  );
}

export default App;